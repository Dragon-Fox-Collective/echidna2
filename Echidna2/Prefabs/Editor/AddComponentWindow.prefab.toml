Using = ["Notifications.Editor", "Echidna2.Prefabs.Gui", "Echidna2.Gui", "Echidna2.Rendering"]

[This]
Properties = [
    { PropertyType = "Component", Type = "FullRectWindow", Name = "Window" },
    { PropertyType = "Reference", Type = "ICanAddChildren", Name = "ComponentList" },
    { PropertyType = "Public", Type = "object", Name = "SelectedObject" },
    { PropertyType = "Private", Type = "Editor", Name = "Editor" },
    { PropertyType = "Private", Type = "bool", Name = "HasBeenInitialized" },
    { PropertyType = "Public", Type = "PrefabRoot?", Name = "PrefabRoot", GetterContent = "return Editor.PrefabRoot;", HasSetter = false },
    { PropertyType = "Private", Type = "(string ComponentPath, ButtonText Text)?", Name = "SelectedComponent", SetterContent = """
if (SelectedComponent is not null) SelectedComponent.Value.Text.Color = System.Drawing.Color.White;
_SelectedComponent = value;
if (SelectedComponent is not null) SelectedComponent.Value.Text.Color = System.Drawing.Color.DeepSkyBlue;
""" },
]
Events = [
    { EventType = "Notification", Name = "EditorInitialize", Content = """
Editor = notification.Editor;
""" },
    { EventType = "Notification", Name = "Initialize", Content = """
if (HasBeenInitialized) return;
HasBeenInitialized = true;

foreach (string classPath in Project.Singleton.Prefabs.Keys)
{
    ButtonText text = Project.Instantiate<ButtonText>("Prefabs.Gui.ButtonText");
    text.TextString = classPath;
    text.LocalScale = (0.5, 0.5);
    text.Justification = TextJustification.Left;
    text.Clicked += _ => SelectedComponent = (classPath, text);
    ComponentList.AddChild(text);
}
""" },
    { EventType = "Reference", Target = "Window", Name = "CloseWindowRequest", Args = [], Content = """
Hierarchy.Parent.QueueRemoveChild(this);
""" },
]
Functions = [
    { ReturnType = "void", Name = "AddNewComponent", Args = [], Content = """
if (SelectedComponent is null) return;
PrefabRoot.AddComponent(SelectedComponent.Value.ComponentPath, SelectedObject);
""" },
]

[This.Values]
Window = "1"
ComponentList = "11"

[1]
Prefab = "Prefabs.Gui.FullRectWindow"
[1.Values]
Margin = 10.0
LocalSize = { X = 300, Y = 400 }
Depth = 15
Children = [ "4" ]

[2]
Prefab = "Prefabs.Gui.ScrollArea"
[2.Values]
Content = [ "11" ]
VerticalExpand = true

[4]
Prefab = "Prefabs.Gui.VLayoutWithHierarchy"
[4.Values]
Children = [ "2", "5" ]

[5]
Prefab = "Prefabs.Gui.HLayoutWithHierarchy"
[5.Values]
Children  = [ "6", "8" ]

[6]
Prefab = "Prefabs.Gui.ButtonRect"
Properties = [
    { PropertyType = "Reference", Type = "FullRectWindow", Name = "Window" },
]
Events = [
    { EventType = "Self", Target = "Button", Name = "Clicked", Args = [{ Name = "notification", Type = "MouseUpNotification" }], Content = """
Window.CloseWindow();
""" },
]
[6.Values]
HorizontalExpand = true
Margin = 5.0
Children = [ "7" ]
Window = "1"

[7]
Prefab = "Prefabs.Gui.TextRect"
[7.Values]
TextString = "Cancel"
LocalScale = { X = 0.5, Y = 0.5 }

[8]
Prefab = "Prefabs.Gui.ButtonRect"
Properties = [
    { PropertyType = "Reference", Type = "AddComponentWindow", Name = "AddComponentWindow" },
    { PropertyType = "Reference", Type = "FullRectWindow", Name = "Window" },
]
Events = [
    { EventType = "Self", Target = "Button", Name = "Clicked", Args = [{ Name = "notification", Type = "MouseUpNotification" }], Content = """
Window.CloseWindow();
AddComponentWindow.AddNewComponent();
""" },
]
[8.Values]
HorizontalExpand = true
Margin = 5.0
Children = [ "9" ]
AddComponentWindow = "This"
Window = "1"

[9]
Prefab = "Prefabs.Gui.TextRect"
[9.Values]
TextString = "Confirm"
LocalScale = { X = 0.5, Y = 0.5 }

[11]
Prefab = "Prefabs.Gui.VLayoutWithHierarchy"
[11.Values]
Spacing = 5